mixin label(key, text)
  label(for=key)= text

mixin dummy_input(key, text)
  .form-group
    label(for=key)= text
    input.form-control(id=key type="text" placeholder="" disabled value=instance[key])

mixin input(key, text)
  .form-group
    label(for=key)= text
    - var err = errors && errors.find(e => e.path == key)
    if err
      input.form-control.is-invalid(id=key name=key type="text" placeholder="" value=instance[key])
      .error.invalid-feedback= err.message
    else
      input.form-control(id=key name=key type="text" placeholder="" value=instance[key])

mixin input_required(key, text)
  .form-group
    label(for=key)= text
      span.required *
    - var err = errors && errors.find(e => e.path == key)
    if err
      input.form-control.is-invalid(id=key name=key type="text" placeholder="" value=instance[key] required)
      .error.invalid-feedback= err.message
    else
      input.form-control(id=key name=key type="text" placeholder="" value=instance[key] required)

mixin dateonly_single(key, text)
  .form-group
    label(for=key)= text
    .input-group
      - var err = errors && errors.find(e => e.path == key)
      if err
        input.form-control.is-invalid.dateonlypicker(id=key type='text' name=key value=instance[key])
        .input-group-append: .input-group-text: i.fal.fa-calendar
        .error.invalid-feedback= err.message
      else
        input.form-control.dateonlypicker(id=key type='text' name=key value=instance[key])
        .input-group-append: .input-group-text: i.fal.fa-calendar
    small.form-text.text-muted.dateonlypicker_help Please specify data in the form of YYYY-MM-DD
    block

mixin dateonly_single_required(key, text)
  .form-group
    label(for=key)= text
      span.required *
    .input-group
      - var err = errors && errors.find(e => e.path == key)
      if err
        input.form-control.is-invalid.dateonlypicker(id=key type='text' name=key value=instance[key] required)
        .input-group-append: .input-group-text: i.fal.fa-calendar
        .error.invalid-feedback= err.message
      else
        input.form-control.dateonlypicker(id=key type='text' name=key value=instance[key] required)
        .input-group-append: .input-group-text: i.fal.fa-calendar
    small.form-text.text-muted.dateonlypicker_help Please specify data in the form of YYYY-MM-DD

    block

mixin select(key, text, options)
  .form-group
    label(for=key)= text
    - var err = errors && errors.find(e => e.path == key)
    if err
      select.select.form-control.is-invalid(id=key name=key)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title
      .error.invalid-feedback= err.message
    else
      select.select.form-control(id=key name=key)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title

mixin select_required(key, text, options)
  .form-group
    label(for=key)= text
      span.required *
    - var err = errors && errors.find(e => e.path == key)
    if err
      select.select.form-control.is-invalid(id=key name=key required)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title
      .error.invalid-feedback= err.message
    else
      select.select.form-control(id=key name=key required)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title

mixin select2(key, text, options)
  .form-group
    label(for=key)= text
    - var err = errors && errors.find(e => e.path == key)
    if err
      select.select2.form-control.is-invalid(id=key name=key)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title
      .error.invalid-feedback= err.message
    else
      select.select2.form-control(id=key name=key)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title

mixin select2_required(key, text, options)
  .form-group
    label(for=key)= text
      span.required *
    - var err = errors && errors.find(e => e.path == key)
    if err
      select.select2.form-control.is-invalid(id=key name=key required)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title
      .error.invalid-feedback= err.message
    else
      select.select2.form-control(id=key name=key required)
        option(value='') ___
        each val in options
          if instance[key] == val.id
            option(selected value=val.id)= val.__title
          else
            option(value=val.id)= val.__title

mixin multiselect(key, text, options, fkey)
  .form-group
    label(for=key)= text
    select.form-control.select2(id=key name=key multiple)
      each val in options
        if locals[key].find(el => el[fkey] == val.id)
          option(selected value=val.id)= val.__title
        else
          option(value=val.id)= val.__title
    - var err = errors && errors.find(e => e.path == key)
    if err
      .error.invalid-feedback= err.message


mixin nav-item(id, title)
  - var auth = 'engi-'+id
  - var uri = '/'+id
  li.nav-item
    if grant && (grant.access.realm_access.roles.includes(auth) || grant.access.realm_access.roles.includes('engi-admin'))
      if path.includes(uri)
        a.nav-link.selected(href=uri)
          block
      else
        a.nav-link(href=uri)
          block
    else
      a.nav-link.disabled(href=uri)
        block

mixin format-date(iso)
  = moment(iso).format('YYYY.MM.DD HH:mm:ss')

mixin inspect_local(key)
  pre.debug(style="font-size: .6rem; line-height: .6rem;")= JSON.stringify(locals._locals[key], 0, 4)

mixin inspect(str)
  pre.debug(style="font-size: .6rem; line-height: .6rem;")= str
