extends ../layout.pug

block body
  - var filterParams = query && query.filter ? JSON.parse(query.filter) : {};
  .card
    .card-header
      a.float-left.btn.mr-3(type="button")
        ion-icon(name='location-outline')
      a.float-left.btn.mr-3(data-toggle="dropdown")
        ion-icon(name='funnel-outline')
      .dropdown-menu
        a.btn.float-left.ml-3.mb-3.mr-3.mt-3(type="button", onclick='resetAll()') Сбросисть все фильтры
      a.float-right.btn.ml-3(type="button", data-toggle="modal", data-target="#tableSettingsModal")
        ion-icon(name='settings-outline')
      a.float-right.btn.ml-3(type="button")
        ion-icon(name='reload-outline')
      a.float-right.btn.ml-3(type="button" href="/passport/edit")
        i.ion.ion-md-add-circle-outline
        |  Добавить
    .card-body
      table#main.footable(data-paging='true', data-stop-propagation="true", data-filtering="true")
        thead
          tr
            th(data-name='id', data-type="number", data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('id') ? 'false' : 'true') Код
            th(data-name='title', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('nomenclature.title') ? 'false' : 'true')
              | Оборудование
              a.filter.dropdown(data-toggle="dropdown")
                ion-icon.float-right(name='funnel-outline')
              .dropdown-menu
                form.px-3.py-3
                  .form-group
                    input.titleSearch.form-control(placeholder='Поиск по названию...')
                a.btn.float-left.ml-3.mb-3(type="button", onclick='reset()') Сброс
                a.btn.float-right.mr-3.mb-3(type="button", onclick='apply()') Применить
            th(data-name='produced', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('produced') ? 'false' : 'true', data-format-string="dd") Дата изготовления
            th(data-breakpoints='xs', data-name='factory_id', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('factory_id') ? 'false' : 'true') Заводской номер
            th(data-breakpoints='xs', data-name='warranty', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('warranty') ? 'false' : 'true', data-type="number") Срок гарантии (мес.)
            th(data-breakpoints='xs', data-name='nomenclature.createdAt', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('warranty.createdAt') ? 'false' : 'true', data-format-string="dd") Дата начала гарантии
            th(data-breakpoints='xs', data-name='warranty_expiration', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('warranty_expiration') ? 'false' : 'true', data-format-string="dd") Дата окончания гарантии
            th(data-breakpoints='xs sm md', data-name='counterparty.title', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('counterparty.title') ? 'false' : 'true') Изотовитель
            th(data-breakpoints='xs sm md', data-name='extra', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('extra') ? 'false' : 'true')
              | Особые отметки
              a.filter.dropdown(data-toggle="dropdown")
                ion-icon.float-right(name='funnel-outline')
              .dropdown-menu
                form.px-3.py-3
                  .form-group.scroll
                    - var filtered = list.map(el => el.extra).filter((el, n, all) => all.indexOf(el) == n)
                    each val in filtered
                      .form-check
                        input.form-check-input(type='checkbox', name='extra', value=val, checked=filterParams.extra && filterParams.extra.length && filterParams.extra.includes(val))
                        label.form-check-label= val
                a.btn.float-left.ml-3.mb-3(type="button", onclick='resetCheckbox()') Сброс
                a.btn.float-right.ml-3.mr-3.mb-3(type="button", onclick='applyCheckbox()') Применить
                //form.px-3.py-3
                //  .form-group
                //    select.form-control
                //      - var filtered = list.map(el => el.extra).filter((el, n, all) => all.indexOf(el) == n)
                //      each val in filtered
                //        option= val
                //a.btn.float-left.ml-3.mb-3(type="button", onclick='resetSelect()') Сброс
                //a.btn.float-right.mr-3.mb-3(type="button", onclick='applySelect()') Применить
            th(data-breakpoints='xs sm md', data-name='beginAt', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('beginAt') ? 'false' : 'true')
              | Дата ввода в эксплуат.
              a.filter.dropdown(data-toggle="dropdown")
                ion-icon.float-right(name='funnel-outline')
              .dropdown-menu
                form.px-3.py-3
                  .form-group
                    .input-group
                      .input-group-prepend
                        span.input-group-text
                          i.far.fa-calendar-alt
                      input#beginAt.form-control.float-right(type='text')
                a.btn.float-left.ml-3.mb-3(type="button", onclick='resetDate()') Сброс
                a.btn.float-right.mr-3.mb-3(type="button", onclick='applyDate()') Применить
            th(data-breakpoints='xs sm md', data-name='accepted_runtime', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('accepted_runtime') ? 'false' : 'true') Допустим. наработка
            th(data-breakpoints='xs sm md', data-name='max_runtime', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('max_runtime') ? 'false' : 'true') Предел. наработка
            th(data-breakpoints='xs sm md', data-name='createdAt', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('createdAt') ? 'false' : 'true') Дата создания
        tbody
          each val in list
            tr(data-href=val.id)
              td= val['id']
              td= val['nomenclature.title']
              td= val['produced']
              td= val['factory_id']
              td= val['warranty']
              td: +format-date(val['nomenclature.createdAt'])
              td= val['warranty_expiration']
              td= val['counterparty.title']
              td= val['extra']
              td= val['createdAt']
              td= val['accepted_runtime']
              td= val['max_runtime']
              td= val['createdAt']
  #tableSettingsModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='tableSettingsModalTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content
        .modal-header
          h6#tableSettingsModalTitle.modal-title Настройка таблицы
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          table.footable(data-paging='true', data-paging-size="20")
            thead
              tr
                th() Заголовок столбца
                th() Видимость
            tbody
              tr
                td.float-left.ml-3 Код
                td
                  input(type="checkbox", name="visible", value="id", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('id') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Оборудование
                td
                  input(type="checkbox", name="visible", value="nomenclature.title", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('nomenclature.title') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата изготовления
                td
                  input(type="checkbox", name="visible", value="produced", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('produced') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Заводской номер
                td
                  input(type="checkbox", name="visible", value="factory_id", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('factory_id') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Срок гарантии (мес.)
                td
                  input(type="checkbox", name="visible", value="warranty", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('warranty') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата начала гарантии
                td
                  input(type="checkbox", name="visible", value="warranty.createdAt", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('warranty.createdAt') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата окончания гарантии
                td
                  input(type="checkbox", name="visible", value="warranty_expiration", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('warranty_expiration') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Изотовитель
                td
                  input(type="checkbox", name="visible", value="counterparty.title", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('counterparty.title') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Особые отметки
                td
                  input(type="checkbox", name="visible", value="extra", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('extra') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата ввода в эксплуат.
                td
                  input(type="checkbox", name="visible", value="beginAt", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('beginAt') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Допустим. наработка
                td
                  input(type="checkbox", name="visible", value="accepted_runtime", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('accepted_runtime') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Предел. наработка
                td
                  input(type="checkbox", name="visible", value="max_runtime", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('max_runtime') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата создания
                td
                  input(type="checkbox", name="visible", value="createdAt", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('createdAt') ? undefined : "checked"))

        .modal-footer.justify-content-between
          button.btn(type='button' data-dismiss='modal') Отмена
          button#settingsModalSave.btn(type='button') Сохранить
  #myModal
append script
  script.
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
  script.
    $(() => {
      $('table').footable();

      $('tr[data-href]').on("click", function (e) {
        if (!$(e.target).hasClass('footable-toggle')) {
          document.location.href = `/passport/edit/${$(this).data('href')}`;
        }
      });

      $('#settingsModalSave').on("click", function () {
        let arr = [];
        $("input:checkbox[name='visible']").each(function () {
          if (!this.checked) {
            arr.push($(this).val());
          }
        });
        document.location.href = `/passport?hide_columns=${arr}`
      });

      $(document).on('click', '.dropdown-menu', function (e) {
        e.stopPropagation();
      });

      $(document).on('click', 'span.month, th.next, th.prev, th.switch, span.year, .applyBtn, .cancelBtn, .daterangepicker', function (e) {
        e.stopPropagation();
      });

      $('body').on('shown.bs.dropdown', function () {
        $('.footable-filtering-search').html('');
        $(this).find('select').each(function () {
          let dropdownParent = $(document.body);

          if ($(this).parents('.dropdown.in:first').length !== 0)
            dropdownParent = $(this).parents('.dropdown.in:first');

          $(this).select2({
            dropdownParent,
            placeholder: 'Поиск по названию...',
            dropdownParent: $(this).parent()
          });
        });

        $('#beginAt').daterangepicker({
          // parentEl: $('#beginAt').parent().parent().parent().parent(),
          // autoApply: true,
          linkedCalendars: false,
          startDate: "08/13/2021",
          endDate: "08/19/2021"
        });
      });
    })
  script.
    function apply() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering), // get the filtering component for the table
          filter = $('.titleSearch').val(); // get the value to filter by
      console.log(filter);
      if (!filter) { // if the value is "none" remove the filter
        filtering.removeFilter('title');
      } else { // otherwise add/update the filter.
        filtering.addFilter('title', filter, ['title']);
      }
      filtering.filter();
    }
  script.
    function reset() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering),
          filter = $('.titleSearch')
      filter.val('');
      filtering.removeFilter('title');
    }
  script.
    function applySelect() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering), // get the filtering component for the table
          filter = $('select').val(); // get the value to filter by
      console.log(filter);
      if (!filter) { // if the value is "none" remove the filter
        filtering.removeFilter('extra');
      } else { // otherwise add/update the filter.
        filtering.addFilter('extra', filter, ['extra'], true, false, 'AND');
      }
      filtering.filter();
    }
  script.
    function resetSelect() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering),
          filter = $('select')
      filter.val('').trigger('change');
      filtering.removeFilter('extra');
      filtering.filter();
    }
  script.
    function applyDate() {
      let currentFilter = params && params.filter ? JSON.parse(params.filter) : {};
      let filter = $('#beginAt').data('daterangepicker');
      let dtStart = filter.startDate.format('YYYY-MM-DDTHH:mm:ss.SSS');
      let dtEnd = filter.endDate ? filter.endDate.format('YYYY-MM-DDTHH:mm:ss.SSS') : filter.startDate.format('YYYY-MM-DDTHH:mm:ss.SSS');
      let searchParams = new URLSearchParams();
      searchParams.set("filter", JSON.stringify({ createdAt: [ dtStart, dtEnd ], ...currentFilter }));
      document.location.href = `/passport?${searchParams}&hide_columns=${params.hide_columns}`
    }
  script.
    function resetDate() {
      document.location.href = `/passport?hide_columns=${params.hide_columns}`
    }
  script.
    function resetAll() {
      document.location.href = `/passport?hide_columns=${params.hide_columns}`;
    }
  script.
    function applyCheckbox() {
      let filter = [];
      let currentFilter = params && params.filter ? JSON.parse(params.filter) : {};

      $("input:checkbox[name='extra']:checked").each(function () {
        filter.push($(this).val());
      });
      let searchParams = new URLSearchParams();
      searchParams.set("filter", JSON.stringify({ extra: filter, ...currentFilter }));
      document.location.href = `/passport?${searchParams}&hide_columns=${params.hide_columns}`
    }
  script.
    function resetCheckbox() {
      document.location.href = `/passport?hide_columns=${params.hide_columns}`
    }
