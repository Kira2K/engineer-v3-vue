extends ../layout.pug

block breadcrumbs
  li.breadcrumb-item.active(aria-current="page") Оборудование

block body
  .card
    .card-header
      h3.card-title Оборудование
      .float-right
        a.btn.btn-success(type="button" href="/passport/edit")
          i.far.fa-plus-circle
          |  Добавить
        | &nbsp;
        a.btn.btn-primary(type="button" href="/download/passport")
          i.fa.fa-file-excel
    .card-body
      #jsGrid

append script
    script.
      $(() => {
        var data
        $('#jsGrid').jsGrid({
          height: "auto",
          width: "auto",
          editing: false,
          filtering: true,
          autoload: true,
          sorting: true,
          paging: true,
          loadMessage: 'Загрузка...',
          noDataContent: 'Нет данных',
          pageSize: 20,
          pageButtonCount: 15,
          pagerFormat: "Страницы: {first} {prev} {pages} {next} {last} &nbsp;&nbsp; {pageIndex} из {pageCount}",
          pagePrevText: "&#x23F4",
          pageNextText: "&#x23F5",
          pageFirstText: "&#x23EE",
          pageLastText: "&#x23ED",
          rowClick: function(args) {
            window.location.href=`/passport/edit/${args.item.id}`
          },
          controller: {
            loadData: (filter) => {
              var deferred = $.Deferred();
              if (data) {
                console.log(filter)
                return $.grep(data, el =>
                     (!filter.nomenclatureTitle || el.nomenclatureTitle.toLowerCase().includes(filter.nomenclatureTitle.toLowerCase()))
                  && (!filter.factory_id        || el.factory_id.toLowerCase().includes(filter.factory_id.toLowerCase()))
                  && (!filter.serial            || el.serial.toLowerCase().includes(filter.serial.toLowerCase()))
                  && (!filter.partnumber        || el.partnumber.toLowerCase().includes(filter.partnumber.toLowerCase()))
                  && (!filter.state             || el.state.toLowerCase().includes(filter.state.toLowerCase()))
                  && (!filter.provisioner       || el.provisioner.toLowerCase().includes(filter.provisioner.toLowerCase()))
                  && (!filter.extra             || el.extra.toLowerCase().includes(filter.extra.toLowerCase()))
                )
              } else
              $.ajax({
                url: `#{env.backendAddr}/api/passport?range=%5B0%2C1000000%5D`,
                success: function(response) {
                  deferred.resolve(data = response.map(el => {
                    el.nomenclatureTitle = `${el['nomenclature.title']}`
                    el.created = `${moment(el.createdAt).format('YYYY.MM.DD HH:mm:ss')}`
                    //console.log(el.factoryId, JSON.stringify(el, 0, 2))
                    return el
                  }));
                }
              })
              return deferred.promise();
            }
          },
          fields: [
            { title: "Код",               name: "id",                 type: "number", width: 60, filtering: false },
            { title: "Оборудование",      name: "nomenclatureTitle",  type: "text",   width: 240 },
            { title: "Заводской номер",   name: "factory_id",         type: "text",   width: 280 },
            { title: "Сер. №",            name: "serial",             type: "text", },
            { title: "№ партии",          name: "partnumber",         type: "text", },
            { title: "Изготовлен",        name: "produced",           type: "date",   width: 110 },
            { title: "Состояние",         name: "state",              type: "text", },
            { title: "Изотовитель",       name: "provisioner",        type: "text", },
            { title: "Особые отметки",    name: "extra",              type: "text", width: 240 },
            { title: "Дата создания",     name: "created",            type: "date", width: 160},
          ]
        })
      })
