extends ../layout.pug

block body
  .card
    .card-header
      a.float-left.btn.mr-3(type="button")
        ion-icon(name='location-outline')
      a.float-left.btn.mr-3(type="button")
        ion-icon(name='funnel-outline')
      a.float-right.btn.ml-3(type="button", data-toggle="modal", data-target="#tableSettingsModal")
        ion-icon(name='settings-outline')
      a.float-right.btn.ml-3(type="button")
        ion-icon(name='reload-outline')
      a.float-right.btn.ml-3(type="button" href="/passport/edit")
        i.ion.ion-md-add-circle-outline
        |  Добавить

    table#main.footable(data-paging='true', data-stop-propagation="true", data-filtering="true")
      thead
        tr
          th(data-name='id', data-type="number", data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('id') ? 'false' : 'true') Код
          th(data-name='title', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('nomenclature.title') ? 'false' : 'true')
            | Оборудование
            a.filter.dropdown(data-toggle="dropdown")
              ion-icon.float-right(name='funnel-outline')
            .dropdown-menu
              form.px-3.py-3
                .form-group
                  input.titleSearch.form-control(placeholder='Поиск по названию...')
              a.btn.float-left.ml-3.mb-3(type="button", onclick='reset()') Сброс
              a.btn.float-right.mr-3.mb-3(type="button", onclick='apply()') Применить
          th(data-name='produced', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('produced') ? 'false' : 'true', data-format-string="dd") Дата изготовления
          th(data-breakpoints='xs', data-name='factory_id', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('factory_id') ? 'false' : 'true') Заводской номер
          th(data-breakpoints='xs', data-name='warranty', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('warranty') ? 'false' : 'true', data-type="number") Срок гарантии (мес.)
          th(data-breakpoints='xs', data-name='nomenclature.createdAt', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('warranty.createdAt') ? 'false' : 'true', data-format-string="dd") Дата начала гарантии
          th(data-breakpoints='xs', data-name='warranty_expiration', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('warranty_expiration') ? 'false' : 'true', data-format-string="dd") Дата окончания гарантии
          th(data-breakpoints='xs sm md', data-name='counterparty.title', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('counterparty.title') ? 'false' : 'true') Изотовитель
          th(data-breakpoints='xs sm md', data-name='extra', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('extra') ? 'false' : 'true')
            | Особые отметки
            a.filter.dropdown(data-toggle="dropdown")
              ion-icon.float-right(name='funnel-outline')
            .dropdown-menu
              form.px-3.py-3
                .form-group
                  select.form-control
                    - var filtered = list.map(el => el.extra).filter((el, n, all) => all.indexOf(el) == n)
                    each val in filtered
                      option= val
              a.btn.float-left.ml-3.mb-3(type="button", onclick='resetSelect()') Сброс
              a.btn.float-right.mr-3.mb-3(type="button", onclick='applySelect()') Применить
          th(data-breakpoints='xs sm md', data-name='beginAt', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('beginAt') ? 'false' : 'true')
            | Дата ввода в эксплуат.
            a.filter.dropdown(data-toggle="dropdown")
              ion-icon.float-right(name='funnel-outline')
            .dropdown-menu
              form.px-3.py-3
                .form-group
                  #beginAt.input-group.date(data-target-input='nearest')
                    input.form-control.datetimepicker-input(type='text' data-target='#beginAt')
                    .input-group-append(data-target='#beginAt' data-toggle='datetimepicker')
                      .input-group-text
                        i.ion.ion-md-calendar
              a.btn.float-left.ml-3.mb-3(type="button", onclick='resetDate()') Сброс
              a.btn.float-right.mr-3.mb-3(type="button", onclick='applyDate()') Применить
          th(data-breakpoints='xs sm md', data-name='accepted_runtime', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('accepted_runtime') ? 'false' : 'true') Допустим. наработка
          th(data-breakpoints='xs sm md', data-name='max_runtime', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('max_runtime') ? 'false' : 'true') Предел. наработка
          th(data-breakpoints='xs sm md', data-name='createdAt', data-visible=query && query.hide_columns && query.hide_columns.split(',').includes('createdAt') ? 'false' : 'true') Дата создания
      tbody
        each val in list
          tr(data-href=val.id)
            td= val['id']
            td= val['nomenclature.title']
            td= val['produced']
            td= val['factory_id']
            td= val['warranty']
            td= val['nomenclature.createdAt']
            td= val['warranty_expiration']
            td= val['counterparty.title']
            td= val['extra']
            td= val['createdAt']
            td= val['accepted_runtime']
            td= val['max_runtime']
            td= val['createdAt']
  #tableSettingsModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='tableSettingsModalTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content
        .modal-header
          h6#tableSettingsModalTitle.modal-title Настройка таблицы
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          table.footable(data-paging='true', data-paging-size="20")
            thead
              tr
                th() Заголовок столбца
                th() Видимость
            tbody
              tr
                td.float-left.ml-3 Код
                td
                  input(type="checkbox", name="visible", value="id", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('id') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Оборудование
                td
                  input(type="checkbox", name="visible", value="nomenclature.title", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('nomenclature.title') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата изготовления
                td
                  input(type="checkbox", name="visible", value="produced", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('produced') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Заводской номер
                td
                  input(type="checkbox", name="visible", value="factory_id", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('factory_id') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Срок гарантии (мес.)
                td
                  input(type="checkbox", name="visible", value="warranty", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('warranty') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата начала гарантии
                td
                  input(type="checkbox", name="visible", value="warranty.createdAt", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('warranty.createdAt') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата окончания гарантии
                td
                  input(type="checkbox", name="visible", value="warranty_expiration", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('warranty_expiration') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Изотовитель
                td
                  input(type="checkbox", name="visible", value="counterparty.title", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('counterparty.title') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Особые отметки
                td
                  input(type="checkbox", name="visible", value="extra", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('extra') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата ввода в эксплуат.
                td
                  input(type="checkbox", name="visible", value="beginAt", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('beginAt') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Допустим. наработка
                td
                  input(type="checkbox", name="visible", value="accepted_runtime", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('accepted_runtime') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Предел. наработка
                td
                  input(type="checkbox", name="visible", value="max_runtime", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('max_runtime') ? undefined : "checked"))
              tr
                td.float-left.ml-3 Дата создания
                td
                  input(type="checkbox", name="visible", value="createdAt", checked=(query && query.hide_columns && query.hide_columns.split(',').includes('createdAt') ? undefined : "checked"))

        .modal-footer.justify-content-between
          button.btn(type='button' data-dismiss='modal') Отмена
          button#settingsModalSave.btn(type='button') Сохранить
  #myModal
append script
  script.
    $(() => {
      $('table').footable();

      $('tr[data-href]').on("click", function (e) {
        if (!$(e.target).hasClass('footable-toggle')) {
          document.location.href = `/passport/edit/${$(this).data('href')}`;
        }
      });

      $('#settingsModalSave').on("click", function () {
        let arr = [];
        $("input:checkbox[name='visible']").each(function () {
          if (!this.checked) {
            arr.push($(this).val());
          }
        });
        document.location.href = `/passport?hide_columns=${arr}`
      });

      $(document).on('click', '.dropdown-menu', function (e) {
        e.stopPropagation();
      });

      $('body').on('shown.bs.dropdown', function () {
        $('.footable-filtering-search').html('');
        $(this).find('select').each(function () {
          let dropdownParent = $(document.body);

          if ($(this).parents('.dropdown.in:first').length !== 0)
            dropdownParent = $(this).parents('.dropdown.in:first');

          $(this).select2({
            dropdownParent,
            placeholder: 'Поиск по названию...',
            dropdownParent: $(this).parent()
          });
        });

        $('.input-group.date').datetimepicker({
          locale: 'ru',
          format: 'DD.MM.YYYY',
          debug: true
        });
      });
    })
  script.
    function apply() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering), // get the filtering component for the table
          filter = $('.titleSearch').eq(1).val(); // get the value to filter by
      console.log(filter);
      if (!filter) { // if the value is "none" remove the filter
        filtering.removeFilter('title');
      } else { // otherwise add/update the filter.
        filtering.addFilter('title', filter, ['title']);
      }
      filtering.filter();
    }
  script.
    function reset() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering),
          filter = $('.titleSearch').eq(1)
      filter.val('');
      filtering.removeFilter('title');
    }
  script.
    function applySelect() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering), // get the filtering component for the table
          filter = $('select').eq(1).val(); // get the value to filter by
      console.log(filter);
      if (!filter) { // if the value is "none" remove the filter
        filtering.removeFilter('extra');
      } else { // otherwise add/update the filter.
        filtering.addFilter('extra', filter, ['extra'], true, false, 'AND');
      }
      filtering.filter();
    }
  script.
    function resetSelect() {
      let filtering = FooTable.get('#main').use(FooTable.Filtering),
          filter = $('select').eq(1)
      filter.val('').trigger('change');
      filtering.removeFilter('extra');
      filtering.filter();
    }
  script.
    function applyDate() {
      // let filtering = FooTable.get('#main').use(FooTable.Filtering), // get the filtering component for the table
      //     filter = $('select').eq(1).val(); // get the value to filter by
      // console.log(filter);
      // if (!filter) { // if the value is "none" remove the filter
      //   filtering.removeFilter('extra');
      // } else { // otherwise add/update the filter.
      //   filtering.addFilter('extra', filter, ['extra'], true, false, 'AND');
      // }
      // filtering.filter();
      let filter = $('#beginAt input').val();
      document.location.href = `/passport?filter=%7B"createdAt"%3A%5B"${moment(filter.split('.').reverse()).format('YYYY-MM-DDTHH:mm:ss.SSS')}"%5D%7D`
    }
  script.
    function resetDate() {
      // let filtering = FooTable.get('#main').use(FooTable.Filtering),
      //     filter = $('select').eq(1)
      // filter.val('').trigger('change');
      // filtering.removeFilter('extra');
      // filtering.filter();
    }
