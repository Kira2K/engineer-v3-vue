extends ../layout.pug

block breadcrumbs
  li.breadcrumb-item.active(aria-current="page") Номенклатура

block body
  .card
    .card-header
      h3.card-title Номенклатура
      .float-right
        button.btn.btn-primary(type="button" data-toggle="modal" data-target="#exampleModal")
          |  настройки

        #exampleModal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true")
          .modal-dialog(role="document")
            .modal-content
              .modal-header
                h5#exampleModalLabel.modal-title Modal title
                button.close(type="button" data-dismiss="modal" aria-label="Close")
                  span(aria-hidden="true") &times;
              
              .modal-body 
                ul#sortable.list-group
                  
    
        
                  li.list-group-item Код
                  li.list-group-item Единица измерения
                  li.list-group-item Наименование
                  li.list-group-item Обозначение
                  li.list-group-item Класс
                  li.list-group-item Группа
                  li.list-group-item Тип
                  li.list-group-item Модель
                  hr.hr 
                  li.list-group-item Параметры

              
              .modal-footer
                button.btn.btn-secondary(type="button" data-dismiss="modal") Close
                button.btn.btn-primary(type="button") Save changes

        a.btn.btn-success(type="button" href="/nomenclature/edit")
          i.far.fa-plus-circle
          |  Добавить
          | &nbsp;
        a.btn.btn-primary(type="button" href="/download/nomenclature")
          i.fa.fa-file-excel
    .card-body
      #jsGrid

append script
    script.
      $(() => {
       
        var data
        $('#jsGrid').jsGrid({
          height: "auto",
          width: "auto",
          editing: false,
          filtering: true,
          autoload: true,
          sorting: true,
          paging: true,
          loadMessage: 'Загрузка...',
          noDataContent: 'Нет данных',
          pageSize: 20,
          pageButtonCount: 15,
          pagerFormat: "Страницы: {first} {prev} {pages} {next} {last} &nbsp;&nbsp; {pageIndex} из {pageCount}",
          pagePrevText: "&#x23F4",
          pageNextText: "&#x23F5",
          pageFirstText: "&#x23EE",
          pageLastText: "&#x23ED",
          rowClick: function(args) {
            window.location.href=`/nomenclature/edit/${args.item.id}`
          },
          controller: {
            loadData: (filter) => {
              var deferred = $.Deferred();
              if (data) {
                console.log(filter)
                return $.grep(data, el =>
                     (!filter.designation       || el.designation.toLowerCase().includes(filter.designation.toLowerCase()))
                  && (!filter.title             || el.title.toLowerCase().includes(filter.title.toLowerCase()))
                  && (!filter.unitId            || el.unitId.toLowerCase().includes(filter.unitId.toLowerCase()))
                  && (!filter.nomenclatureClass || el.nomenclatureClass.toLowerCase().includes(filter.nomenclatureClass.toLowerCase()))
                  && (!filter.nomenclatureGroup || el.nomenclatureGroup.toLowerCase().includes(filter.nomenclatureGroup.toLowerCase()))
                  && (!filter.nomenclatureType  || el.nomenclatureType.toLowerCase().includes(filter.nomenclatureType.toLowerCase()))
                  && (!filter.nomenclatureModel || el.nomenclatureModel.toLowerCase().includes(filter.nomenclatureModel.toLowerCase()))
                )
              } else
              $.ajax({
                url: `#{env.backendAddr}/api/nomenclature?range=%5B0%2C1000000%5D`,
                success: function(response) {
                  deferred.resolve(data = response.map(el => {
                    el.unitId = `${el['unit.short']}`
                    el.nomenclatureClass = `${el['nm.nt.ng.nc.title']}`
                    el.nomenclatureGroup = `${el['nm.nt.ng.title']}`
                    el.nomenclatureType  = `${el['nm.nt.title']}`
                    el.nomenclatureModel = `${el['nm.title']}`
                    el.created = `${moment(el.createdAt).format('YYYY.MM.DD HH:mm:ss')}`
                    //console.log(el.factoryId, JSON.stringify(el, 0, 2))
                    return el
                  }));
                }
              })
              return deferred.promise();
            }
          },
          fields: [
            { title: "Код",                 name: "id",                 type: "number", width: 60, filtering: false },
            { title: "Обозначение",         name: "designation",        type: "text",   width: 140 },
            { title: "Наименование",        name: "title",              type: "text",   width: 280 },
            { title: "Ед изм.",             name: "unitId",             type: "text",   width: 70,},
            { title: "Класс",               name: "nomenclatureClass",  type: "text",   width: 220,},
            { title: "Группа",              name: "nomenclatureGroup",  type: "text",   width: 220,},
            { title: "Тип",                 name: "nomenclatureType",   type: "text",   width: 220,},
            { title: "Модель",              name: "nomenclatureModel",  type: "text",   width: 220,},
            { title: "Дата создания",       name: "created",            type: "date",   width: 160},
          ]
        })
         $("#sortable").sortable();
           
      })
